= Private Metadata Sharing - Private Sharing Multi Hashes
:author: Alastria
:revnumber: 0.1
:revdate: 03-10-2019
:numbered:
:icons: font
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
:toc:

(Version: {revnumber}, Version Date: {revdate})


== Introduction: the life cycle of a Credential/Presentation
The lyfe cycle of Verifiable Credentials (VC) and Verifiable Presentations (VP) should be registered on the blockchain to have digital evidences of the state changes the VC/VP has passed trough. This recording should be done in a privacy preserving way at different levels. As we have seen in the model and interaction definition, VC and VP are sent directly from the Issuer to the User (VC) or from the User to the Service Provider (VP), so no personal information is expossed.

Recording the state changes does not expose the content of the VC/CP but can potencially expose the relationship between the different parties sharing VC/VP. This potnetial exposure of the relationship is what must be avoided in the implementation of a Private Metadata Sharing Mechanism that in Alastria Id is implemented using PSM Hashes.

== Summary of Private Credential Management Requirements
- Subject should be able to register a Credential reception, this will ensure the Issuer that the Credential has been properly received and be a digital evidence that the Issuer can use to demonstrate it has provided that personal information to the user.
- Issuer should be able at any time to revoke Credentials, registering the revocation on the blockchain.
- Should the issuer request the reception registration and the subject not perform it, the Issuer can revoke the VC.
- Subject should be able to mark a Credential as deleted in the Registry. Anybody having a copy of the Credential must stop using itand delete its copy.
- Third parties should not be able to realize any Issuer-Subject relationship from the above actions.
- The relationship between the registered actions on the blockchain and the Credential must only be known to those having produced or received the Credential off chain.
** Issuer.
** Subject (sent by the Issuer).
** Service Provider (sent by the Subject).

== Implementation overview
- Registration is made on the Blockchain by the Credential Registry Smart Contract using the Alastria DID of the Issuer (for Issuer actions) and the Alastria DID of the User (for User actions).
- To avoid the linking of the Issuer actions and those of the User actions over the very same Credential two **different references** will be used.
- Those references should not be guesable without the credential, but easily calculable from the credential.

== Implementation details: PSM Hashes
In order to create two different references to the same credential, Alastria Id model will use two Private Sharing Multi (PSM) hashes derived from the Credential:
* SubjectCredentialHash: used to register and delete the Credential by the user.
* IssuerCredentialHash: used to revoke the Credential by the Issuer.

=== SubjectCredentialHash
Is calculated from the concatenation of the Credential and the Subject Alastria DID.

SubjectCredentialHash == hash (Credential & subjectAlastriaDID)

image::img/IssuerCredentialHash.PNG

image:IssuerCredentialHash.PNG

img/1_Alastria%20ID%20equipo%20Scrum-story%20mapping.jpg

image:https://github.com/alastria/alastria-identity/blob/feature/newdoc/docs/img/1_Alastria%20ID%20equipo%20Scrum-story%20mapping.jpg

